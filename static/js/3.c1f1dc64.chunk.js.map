{"version":3,"sources":["Components/About/About.module.css","utils/useRecursiveTimeout.ts","Components/About/About.tsx"],"names":["module","exports","useRecursiveTimeout","callback","delay","savedCallback","useRef","useEffect","current","id","setTimeout","tick","ret","Promise","then","clearTimeout","commonCarusel","index","bgPict","front_text","text","compose","connect","state","props","useState","progress","setProgress","progress2","setProgress2","progress3","setProgress3","r","Slider","commonImages","front_image","commonTexts","className","style","aboutWrapper","row","imgBlock","grid","gridItem","src","alt","textBlock","topBlock","icon","faDesktop","title","faIdCardAlt","faTruck"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,aAAe,4BAA4B,UAAY,8CAA8C,IAAM,mBAAmB,UAAY,yBAAyB,SAAW,wBAAwB,KAAO,oBAAoB,SAAW,wBAAwB,KAAO,oBAAoB,SAAW,0B,gJCoC7SC,MAnCf,SACIC,EACAC,GAEA,IAAMC,EAAgBC,iBAAOH,GAG7BI,qBAAU,WACNF,EAAcG,QAAUL,IACzB,CAACA,IAGJI,qBAAU,WACN,IAAIE,EAgBJ,GAAc,OAAVL,EAEA,OADAK,EAAKC,YAhBT,SAASC,IACL,IAAMC,EAAMP,EAAcG,UAEtBI,aAAeC,QACfD,EAAIE,MAAK,WACS,OAAVV,IACAK,EAAKC,WAAWC,EAAMP,OAIhB,OAAVA,IACAK,EAAKC,WAAWC,EAAMP,MAKRA,GACf,kBAAMK,GAAMM,aAAaN,MAErC,CAACL,KCjBJY,EAAgB,CAChBC,MAAO,CACH,YAAe,CACX,CAAC,MAASC,KACV,CAAC,MAASA,KACV,CAAC,MAASA,MAEdC,WAAY,CACR,CAACC,KAAM,8BACP,CAACA,KAAM,uSACP,CAACA,KAAM,0SA2IJC,4BAAQC,aAJC,SAACC,GACrB,MAAO,KAGqC,IAAjCF,EArIkB,SAACG,GAAgB,IAAD,EACfC,mBAAS,GADM,mBACxCC,EADwC,KAC9BC,EAD8B,OAEbF,mBAAS,GAFI,mBAExCG,EAFwC,KAE7BC,EAF6B,OAGbJ,mBAAS,GAHI,mBAGxCK,EAHwC,KAG7BC,EAH6B,KAuB7C,OAlBA7B,GACI,kBACI,IAAIW,SAAQ,SAAAmB,GACRL,EAAYD,EAAW,GACvBM,SACA,IACZ9B,GACI,kBACI,IAAIW,SAAQ,SAAAmB,GACRH,EAAaD,EAAY,GACzBI,SACA,IACZ9B,GACI,kBACI,IAAIW,SAAQ,SAAAmB,GACRD,EAAaD,EAAY,GACzBE,SACA,IAER,6BACI,kBAACC,EAAA,EAAD,CACIC,aAAclB,EAAcC,MAAMkB,YAClCC,YAAapB,EAAcC,MAAME,aAErC,yBAAKkB,UAAWC,IAAMC,cAClB,qCACA,yBAAKF,UAAWC,IAAME,KAClB,yBAAKH,UAAS,UAAKC,IAAMG,SAAX,YAAuBH,IAAMI,OACvC,yBAAKL,UAAWC,IAAMK,UAClB,yBAAKC,IAAI,iDAAiDC,IAAI,MAElE,yBAAKR,UAAWC,IAAMK,UAClB,yBAAKC,IAAI,iDAAiDC,IAAI,MAElE,yBAAKR,UAAWC,IAAMK,UAClB,yBAAKC,IAAI,iDAAiDC,IAAI,MAElE,yBAAKR,UAAWC,IAAMK,UAClB,yBAAKC,IAAI,iDAAiDC,IAAI,OAGtE,yBAAKR,UAAWC,IAAMQ,WAClB,yBAAKT,UAAWC,IAAMS,WACtB,kuFAYR,yBAAKV,UAAWC,IAAME,KAClB,yBAAKH,UAAWC,IAAMG,UAClB,yBAAKG,IAAK,iDAAkDC,IAAK,MAErE,yBAAKR,UAAWC,IAAMQ,WAClB,yBAAKT,UAAWC,IAAMS,UAClB,yBAAKV,UAAWC,IAAMU,MAClB,kBAAC,IAAD,CAAiBA,KAAMC,OAE3B,yBAAKZ,UAAWC,IAAMY,OAAtB,sDAEJ,8pDAQR,yBAAKb,UAAWC,IAAME,KAClB,yBAAKH,UAAWC,IAAMG,UAClB,yBAAKG,IAAK,iDAAkDC,IAAK,MAErE,yBAAKR,UAAWC,IAAMQ,WAClB,yBAAKT,UAAWC,IAAMS,UAClB,yBAAKV,UAAWC,IAAMU,MAClB,kBAAC,IAAD,CAAiBA,KAAMG,OAE3B,yBAAKd,UAAWC,IAAMY,OAAtB,6GAEJ,y6CAQR,yBAAKb,UAAWC,IAAME,KAClB,yBAAKH,UAAS,UAAKC,IAAMG,SAAX,YAAuBH,IAAMI,OACvC,yBAAKL,UAAWC,IAAMK,UAClB,yBAAKC,IAAI,iDAAiDC,IAAI,MAElE,yBAAKR,UAAWC,IAAMK,UAClB,yBAAKC,IAAI,iDAAiDC,IAAI,MAElE,yBAAKR,UAAWC,IAAMK,UAClB,yBAAKC,IAAI,iDAAiDC,IAAI,MAElE,yBAAKR,UAAWC,IAAMK,UAClB,yBAAKC,IAAI,iDAAiDC,IAAI,OAGtE,yBAAKR,UAAWC,IAAMQ,WAClB,yBAAKT,UAAWC,IAAMS,UAClB,yBAAKV,UAAWC,IAAMU,MAClB,kBAAC,IAAD,CAAiBA,KAAMI,OAE3B,yBAAKf,UAAWC,IAAMY,OAAtB,qDAEJ","file":"static/js/3.c1f1dc64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutWrapper\":\"About_aboutWrapper__1_-Qs\",\"container\":\"About_container__1Y436 App_container__LZgxe\",\"row\":\"About_row__2c2-e\",\"textBlock\":\"About_textBlock__6Cqxj\",\"topBlock\":\"About_topBlock__1xmTc\",\"icon\":\"About_icon__1gkit\",\"imgBlock\":\"About_imgBlock__3a9Y1\",\"grid\":\"About_grid__VO9Ba\",\"gridItem\":\"About_gridItem__18c0z\"};","import {useEffect, useRef} from \"react\";\n\nfunction useRecursiveTimeout<T>(\n    callback: () => Promise<T> | (() => void),\n    delay: number | null\n) {\n    const savedCallback = useRef(callback);\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the timeout loop.\n    useEffect(() => {\n        let id: NodeJS.Timeout;\n        function tick() {\n            const ret = savedCallback.current();\n\n            if (ret instanceof Promise) {\n                ret.then(() => {\n                    if (delay !== null) {\n                        id = setTimeout(tick, delay);\n                    }\n                });\n            } else {\n                if (delay !== null) {\n                    id = setTimeout(tick, delay);\n                }\n            }\n        }\n        if (delay !== null) {\n            id = setTimeout(tick, delay);\n            return () => id && clearTimeout(id);\n        }\n    }, [delay]);\n}\nexport default useRecursiveTimeout;","import React, {useCallback, useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport style from './About.module.css';\nimport {AppStateType} from \"../../Redux/Store\";\nimport Slider from \"../../common/Slider\";\nimport bgPict from \"../../assets/images/slide1.png\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faDesktop} from '@fortawesome/free-solid-svg-icons'\nimport {faTruck} from '@fortawesome/free-solid-svg-icons'\nimport {faIdCardAlt} from '@fortawesome/free-solid-svg-icons'\nimport useRecursiveTimeout from \"../../utils/useRecursiveTimeout\";\n\ninterface I_Props {\n    imageLoaded?: any\n    order?: any\n}\n\nlet commonCarusel = {\n    index: {\n        \"front_image\": [\n            {\"image\": bgPict},\n            {\"image\": bgPict},\n            {\"image\": bgPict}\n        ],\n        front_text: [\n            {text: \"carousel asdasdasd image 1\"},\n            {text: \"Общество с ограниченной ответственностью «Печь Орин» image 2\"},\n            {text: \"Общество с ограниченной ответственностью «Печь Орин» image 3\"}\n        ]\n    }\n};\n\n\nconst About: React.FC<I_Props> = (props: any) => {\n    let [progress, setProgress] = useState(0);\n    let [progress2, setProgress2] = useState(0);\n    let [progress3, setProgress3] = useState(0);\n\n    useRecursiveTimeout(\n        () =>\n            new Promise(r => {\n                setProgress(progress + 1);\n                r();\n            }), 50)\n    useRecursiveTimeout(\n        () =>\n            new Promise(r => {\n                setProgress2(progress2 + 1);\n                r();\n            }), 70);\n    useRecursiveTimeout(\n        () =>\n            new Promise(r => {\n                setProgress3(progress3 + 1);\n                r();\n            }), 90);\n    return (\n        <div>\n            <Slider\n                commonImages={commonCarusel.index.front_image}\n                commonTexts={commonCarusel.index.front_text}\n            />\n            <div className={style.aboutWrapper}>\n                <h2>About</h2>\n                <div className={style.row}>\n                    <div className={`${style.imgBlock} ${style.grid}`}>\n                        <div className={style.gridItem}>\n                            <img src=\"https://pechorin.by/media/hardcode/about/2.jpg\" alt=\"\"/>\n                        </div>\n                        <div className={style.gridItem}>\n                            <img src=\"https://pechorin.by/media/hardcode/about/2.jpg\" alt=\"\"/>\n                        </div>\n                        <div className={style.gridItem}>\n                            <img src=\"https://pechorin.by/media/hardcode/about/2.jpg\" alt=\"\"/>\n                        </div>\n                        <div className={style.gridItem}>\n                            <img src=\"https://pechorin.by/media/hardcode/about/2.jpg\" alt=\"\"/>\n                        </div>\n                    </div>\n                    <div className={style.textBlock}>\n                        <div className={style.topBlock}></div>\n                        <p>\n                            Пекарня Печорин предлагает Вам выпечку по оригинальным рецептам, основанных на классической\n                            славянской кухне. Тонкое, без дрожжевое тесто, много разнообразной начинки, это и есть\n                            настоящие, правильные пирожки. Мы предлагаем только свежую выпечку, Наши кондитера\n                            приготовят и\n                            отпекут Ваш заказ непосредственно перед доставкой. Вы можете самостоятельно собрать набор из\n                            нашего ассортимента для любого случая. Накрыть стол для друзей, коллег по работе,\n                            организовать\n                            фуршет. Каждый найдет в нашем ассортименте пирог по своему вкусу.\n                        </p>\n                    </div>\n                </div>\n                <div className={style.row}>\n                    <div className={style.imgBlock}>\n                        <img src={'https://pechorin.by/media/hardcode/about/5.jpg'} alt={''}/>\n                    </div>\n                    <div className={style.textBlock}>\n                        <div className={style.topBlock}>\n                            <div className={style.icon}>\n                                <FontAwesomeIcon icon={faDesktop}/>\n                            </div>\n                            <div className={style.title}>О Сервисе</div>\n                        </div>\n                        <p>\n                            Мы работаем с понедельника по пятницу, по рабочим дням. Заказы сегодня на сегодня\n                            принимаются только по телефону до 12-30. Время для приготовления и доставки занимает от 1,5\n                            часов, и зависит от величины заказа и района доставки. Если Вам нужно приготовить большой\n                            заказ или важно время доставки, пожалуйста, сделайте заказ заранее.\n                        </p>\n                    </div>\n                </div>\n                <div className={style.row}>\n                    <div className={style.imgBlock}>\n                        <img src={'https://pechorin.by/media/hardcode/about/5.jpg'} alt={''}/>\n                    </div>\n                    <div className={style.textBlock}>\n                        <div className={style.topBlock}>\n                            <div className={style.icon}>\n                                <FontAwesomeIcon icon={faIdCardAlt}/>\n                            </div>\n                            <div className={style.title}>Для юридических лиц</div>\n                        </div>\n                        <p>\n                            Если Вы хотите сделать заказ на организацию, с оплатой по безналичному расчету. Пришлите,\n                            пожалуйста, Ваш заказ и реквизиты на наш e-mail: info@pechorin.by. Мы также осуществляем\n                            поставки нашей продукции на регулярной (договорной) основе для ИП и юр.лиц для реализации\n                            или корпоративного питания.\n                        </p>\n                    </div>\n                </div>\n                <div className={style.row}>\n                    <div className={`${style.imgBlock} ${style.grid}`}>\n                        <div className={style.gridItem}>\n                            <img src=\"https://pechorin.by/media/hardcode/about/2.jpg\" alt=\"\"/>\n                        </div>\n                        <div className={style.gridItem}>\n                            <img src=\"https://pechorin.by/media/hardcode/about/2.jpg\" alt=\"\"/>\n                        </div>\n                        <div className={style.gridItem}>\n                            <img src=\"https://pechorin.by/media/hardcode/about/2.jpg\" alt=\"\"/>\n                        </div>\n                        <div className={style.gridItem}>\n                            <img src=\"https://pechorin.by/media/hardcode/about/2.jpg\" alt=\"\"/>\n                        </div>\n                    </div>\n                    <div className={style.textBlock}>\n                        <div className={style.topBlock}>\n                            <div className={style.icon}>\n                                <FontAwesomeIcon icon={faTruck}/>\n                            </div>\n                            <div className={style.title}>Доставка</div>\n                        </div>\n                        <p>Доставка осуществляется нашими курьерами с 9-00 до 18-30.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {}\n};\n\nexport default compose(connect(mapStateToProps, {}))(About);\n"],"sourceRoot":""}